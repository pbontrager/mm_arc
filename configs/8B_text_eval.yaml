# Config for running the InferenceRecipe in dev/generate_v2.py to generate output
# from a Llama3.2 11B Vision Instruct model
#
# This config assumes that you've run the following command before launching:
#   tune download meta-llama/Llama-3.2-11B-Vision-Instruct --output-dir /tmp/Llama-3.2-11B-Vision-Instruct
#
# To launch, run the following command from root torchtune directory:
#    tune run dev/generate_v2 --config llama3_2_vision/generation_v2

# Model arguments
model:
  _component_: torchtune.models.llama3_1.llama3_1_8b

# Transform arguments
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: /tmp/Meta-Llama-3.1-8B-Instruct/original/tokenizer.model
  prompt_template: null
  max_seq_len: null

# Checkpointer
checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /tmp/Meta-Llama-3.1-8B-Instruct/
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors
  ]
  recipe_checkpoint: null
  output_dir: /tmp/Meta-Llama-3.1-8B-Instruct/
  model_type: LLAMA3
resume_from_checkpoint: False

# Device
device: cuda
dtype: bf16
seed: 1234
log_level: INFO

# Dataset arguments
dataset:
  _component_: datasets.load_dataset
  path: json
  split: test
  data_dir: ARC-AGI/data/
system_prompt: Solve these challenges by completing the pattern from the given example, following the examples provided.
max_tokens: 12000
temperature: 0.6 # 0.8 and 0.6 are popular values to try
top_k: 300
